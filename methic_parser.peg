grammar MethicParser

  expression <- additive
  additive <- head:multitive
              tail:(space operator:additive_op space operand:multitive)*
              <BinaryOperation>
  additive_op <- ('+' / '-') <AdditiveOpNode>
  multitive <- head:primary
               tail:(space operator:multitive_op space operand:primary)*
               <BinaryOperation>
  multitive_op <- ('*' / '/') <MultitiveOpNode>
  primary <- variable / number / '('? space expression space ')'? <PrimaryNode>
  variable <- (letter+ (number_character / dot)* (letter / number_character)*) <TextNode>
  letter <- [a-zA-Z]
  dot <- '.'
  number_character <- [0-9]
  number <- [0-9]+ <NumberNode>
  space <- " "*

